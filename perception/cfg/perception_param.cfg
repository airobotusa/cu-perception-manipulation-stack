#!/usr/bin/env python
PACKAGE = "perception"


from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("run_perception", bool_t, 0, "True for run, false for don't", False)
gen.add("with_robot", bool_t, 0, "True if using root as base", False)
gen.add("only_one_object", bool_t, 0, "True if only 1 instance of each object", False)
gen.add("colored_segmentation", bool_t, 0, "True to segment unknown objects by color", False)
gen.add("save_unknown_pcd", bool_t, 0, "True to save unknown object pcd's", False) 

#gen.add("min_cws_height", double_t, 0, "Min cup with spoon height", .13, .01, .3)
#gen.add("max_cws_height", double_t, 0, "Max cup with spoon height", .19, .01, .3)
#gen.add("min_cws_xy", double_t, 0, "Min cup with spoon depth and width", .07, .01, .3)
#gen.add("max_cws_xy", double_t, 0, "Max cup with spoon depth and width", .16, .01, .3)
#gen.add("cup_height", double_t, 0, "Height at which the spoon starts above cup", .07, .01, .2)

#gen.add("min_plate_height", double_t, 0, "Min plate height", .01, .01, .3)
#gen.add("max_plate_height", double_t, 0, "Max plate height", .04, .01, .3)
#gen.add("min_plate_xy", double_t, 0, "Min plate depth and width", .23, .01, .3)
#gen.add("max_plate_xy", double_t, 0, "Max plate depth and width", .28, .01, .3)

#gen.add("min_bowl_height", double_t, 0, "Min bowl height", .03, .01, .3)
#gen.add("max_bowl_height", double_t, 0, "Max bowl height", .06, .01, .3)
#gen.add("min_bowl_xy", double_t, 0, "Min bowl depth and width", .8, .01, .3)
#gen.add("max_bowl_xy", double_t, 0, "Max bowl depth and width", .17, .01, .3)

#gen.add("min_cup_height", double_t, 0, "Min cup height", .06, .01, .3)
#gen.add("max_cup_height", double_t, 0, "Max cup height", .09, .01, .3)
#gen.add("min_cup_xy", double_t, 0, "Min cup depth and width", .08, .01, .3)
#gen.add("max_cup_xy", double_t, 0, "Max cup depth and width", .12, .01, .3)

#gen.add("min_shaker_height", double_t, 0, "Min shaker height", .09, .01, .3)
#gen.add("max_shaker_height", double_t, 0, "Max shaker height", .11, .01, .3)
#gen.add("min_shaker_xy", double_t, 0, "Min shaker depth and width", .3, .01, .3)
#gen.add("max_shaker_xy", double_t, 0, "Max shaker depth and width", .6, .01, .3)

#gen.add("max_height_above_table", double_t, 0, "Max distance above table for objects", .18, .01, .3)
#gen.add("distance_between_objects", double_t, 0, "Distance between objects", .18, .01, .3)
#gen.add("min_pts_object", double_t, 0, "Min points for valid object", .18, .01, .3)
#gen.add("max_pts_object", double_t, 0, "Max points for valid object", .18, .01, .3)

task_enum = gen.enum([  gen.const("Task1",      int_t, 0, "Task 1 objects: bowl, plate, cws"),
                        gen.const("Task2",      int_t, 1, "Task 2 objects: cws, cup"),
                        gen.const("Task3",      int_t, 2, "Task 3 objects: shaker, plate")],
                       "An enum to select objects to look for")

gen.add("task", int_t, 0, "An enum to select objects to look for", 0, 0, 1, edit_method=task_enum)

exit(gen.generate(PACKAGE, "perception", "perception_param"))
